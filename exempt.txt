(*, provider: Model | None, name: str | None = None, agent_id: str | None, introduction: str | None = None, images: List[Image] | None = None, videos: List[Video] | None = None, audio: List[Audio] | None = None, agent_data: Dict[str, Any] | None = None, user_id: str | None = None, user_data: Dict[str, Any] | None = None, session_id: str | None, session_name: str | None = None, session_state: Dict[str, Any] = dict, session_data: Dict[str, Any] | None = None, memory: AgentMemory = AgentMemory(), add_chat_history_to_messages: bool, num_history_responses: int = 3, knowledge_base: AgentKnowledge | None, add_references: bool, retriever: ((...) -> (list[dict] | None)) | None = None, references_format: Literal['json', 'yaml'], storage: AgentStorage | None = None, _agent_session: AgentSession | None = None, tools: List[Tool | Toolkit | ((...) -> Any) | Dict | Function] | None = None, show_tool_calls: bool = False, tool_call_limit: int | None = None, tool_choice: str | Dict[str, Any] | None = None, context: Dict[str, Any] | None = None, add_context: bool = False, resolve_context: bool = True, reasoning: bool = False, reasoning_model: Model | None = None, reasoning_agent: Agent | None = None, reasoning_min_steps: int = 1, reasoning_max_steps: int = 10, read_chat_history: bool = False, search_knowledge: bool = True, update_knowledge: bool = False, read_tool_call_history: bool = False, add_messages: List[Dict | Message] | None = None, system_prompt: str | ((...) -> Any) | None = None, system_prompt_template: PromptTemplate | None = None, use_default_system_message: bool = True, system_message_role: str = "system", description: str | None = None, task: str | None = None, instructions: str | List[str] | ((...) -> Any) | None = None, guidelines: List[str] | None = None, expected_output: str | None = None, additional_context: str | None = None, prevent_hallucinations: bool = False, prevent_prompt_leakage: bool = False, limit_tool_access: bool = False, markdown: bool = False, add_name_to_instructions: bool = False, add_datetime_to_instructions: bool = False, user_prompt: List | Dict | str | ((...) -> Any) | None = None, user_prompt_template: PromptTemplate | None = None, use_default_user_message: bool = True, user_message_role: str = "user", output_model: type[BaseModel] | None, parse_response: bool = True, structured_outputs: bool = False, save_response_to_file: str | None = None, team: List[Agent] | None = None, role: str | None = None, respond_directly: bool = False, add_transfer_instructions: bool = True, team_response_separator: str = "\n", debug_mode: bool, monitoring: bool = getenv("PHI_MONITORING", "false").lower() == "true", telemetry: bool = getenv("PHI_TELEMETRY", "true").lower() == "true", run_id: str | None = None, run_input: str | List | Dict | None = None, run_response: RunResponse = RunResponse, stream: bool | None = None, stream_intermediate_steps: bool = False) -> Agent
